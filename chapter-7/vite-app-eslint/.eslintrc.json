{
    // プログラムの実行環境をESLint に教える。その環境で使用可能なグローバル変数などがプリセットされている
    "env": {
        "browser": true,
        "es2022": true
    },
    // 既存の設定を流用する。後述のプラグイン、ルール、パーサの設定値などがすべて継承される。ESLint パッケージに標準で含まれているものか、別途インストールしたプラグインや共有設定パッケージのものが指定できる。ここに記述した共有設定間でルール設定が重複している場合、リストの後ろに記述されたほうの値で上書きされる
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:react/recommended",
        "standard-with-typescript",
        "plugin:jsx-a11y/recommended",
        "plugin:react/jsx-runtime",
        "plugin:react-hooks/recommended"
    ],
    // パーサの各種実行オプションを設定する
    "parserOptions": {
        "ecmaVersion": "latest",
        "tsconfigRootDir": ".",
        "project": ["./tsconfig.json"],
        "sourceType": "module"
    },
    // 任意の（パッケージとしてインストール済みの）プラグインを有効化する
    "plugins": ["@typescript-eslint", "jsx-a11y", "react", "react-hooks"],
    "overrides": [
        {
            "files": ["*.tsx"],
            "rules": {
                "react/prop-types": "off"
            }
        }
    ],
    // 適用する個々のルールと、エラーレベルや例外などその設定値を記述する
    "rules": {
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": "return"
            }
        ],
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": ["error"],
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": false
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/triple-slash-reference": [
            "error",
            {
                "types": "always"
            }
        ],
        "import/extensions": [
            "error",
            {
                "ignorePackages": true,
                "pattern": {
                    "js": "never",
                    "jsx": "never",
                    "ts": "never",
                    "tsx": "never"
                }
            }
        ],
        "import/order": [
            "error",
            {
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "object",
                    "index"
                ],
                "pathGroups": [
                    {
                        "pattern": "{react,react-dom/**}",
                        "group": "builtin",
                        "position": "before"
                    },
                    {
                        "pattern": "{[A-Z]*,**/[A-Z]*}",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "./**.module.css",
                        "group": "index",
                        "position": "after"
                    }
                ],
                "pathGroupsExcludedImportTypes": ["builtin"],
                "alphabetize": {
                    "order": "asc"
                }
            }
        ],
        "react/display-name": "off"
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    }
}

// eslint-config-standard-with-typescript が何に依存しているかというのは次のように確認する
// yarn info eslint-config-standard-with-typescript peerDependencies
